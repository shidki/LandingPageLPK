/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Torii_Gate/model.glb --output src/components/Torii_Gate.jsx 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function Torii_Gate(props) {
  const { nodes, materials } = useGLTF('/models/Torii_Gate/model.glb')
      // Function untuk apply fade effect ke material
  const applyFadeEffect = (shader) => {
    // Add varying untuk world position
    shader.vertexShader = shader.vertexShader.replace(
      '#include <common>',
      `#include <common>
       varying vec3 vWorldPosition;`
    );
    
    shader.vertexShader = shader.vertexShader.replace(
      '#include <worldpos_vertex>',
      `#include <worldpos_vertex>
       vWorldPosition = worldPosition.xyz;`
    );

    // Fragment shader
    shader.fragmentShader = shader.fragmentShader.replace(
      '#include <common>',
      `#include <common>
       varying vec3 vWorldPosition;`
    );

    shader.fragmentShader = shader.fragmentShader.replace(
      'vec4 diffuseColor = vec4( diffuse, opacity );',
      `// Fade effect based on distance to camera
       float dist = distance(cameraPosition, vWorldPosition);
       float fadeDist = 8.0;   // Mulai fade
       float maxDist = 30.0;   // Hilang total
       
       float fadeOpacity = 1.0 - smoothstep(fadeDist, maxDist, dist);
       fadeOpacity = clamp(fadeOpacity, 0.0, 1.0);
       
       vec4 diffuseColor = vec4( diffuse, fadeOpacity * opacity );`
    );
  };
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['Node-Mesh'].geometry} material={materials.mat23} >
        <meshStandardMaterial color={'white'}
        transparent
          onBeforeCompile={applyFadeEffect} />
      </mesh>
      <mesh geometry={nodes['Node-Mesh_1'].geometry} material={materials.mat14}>
        <meshStandardMaterial color={'white'}
        transparent
          onBeforeCompile={applyFadeEffect} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/Torii_Gate/model.glb')
